@{
    ViewBag.Title = "Quản Lý Sự Kiện";
    Layout = "~/Views/Shared/_LayoutVelzon.cshtml";
    ViewBag.ModuleName = "Quản Lý Sự Kiện";
    ViewBag.PageName = "Danh sách Quản Lý Sự Kiện";
    ViewBag.ModuleCode = "QLSuKien";
}
<style>
    .fix_p-box-action {
        padding: 16px 16px 0 0;
    }
</style>
@using Hinet.Model.IdentityEntities;
@using Hinet.Model.Entities;
@using Newtonsoft.Json;
@using Hinet.Service.Common;
@using Hinet.Service.QLSuKienService.Dto;
@model PageListResultBO<QLSuKienDto>
@{
    var lstData = Html.Raw(JsonConvert.SerializeObject(Model.ListItem));
}

<div class="mb-1 d-flex justify-content-end fix_p-box-action">
    <a href="#collapseDiv" aria-controls="collapsePanel" data-bs-toggle="collapse" role="button" class="btn btn-primary btn-sm btn-secondary m-1 fix_btnFind">
        <i class="ri-search-line "></i> Tìm kiếm
    </a>
    <a href="/QLSuKienArea/QLSuKien/Import" class="btn btn-primary btn-sm  btn-secondary m-1 fix_btnImport">
        <i class="ri-upload-line "></i> Import
    </a>
    <a href="/QLSuKienArea/QLSuKien/Create" class="btn btn-primary btn-sm btn-secondary m-1 fix_btnAdd">
        <i class="ri-add-line"></i> Thêm mới
    </a>
</div>
@Html.Partial("_SearchPartial")
<div class="row">
    <div class="col-lg-12">
        <div class="card">
            <div class="card-header">
                <h4 class="card-title mb-0">@ViewBag.Title</h4>
            </div>
            <div class="card-body" id="tbl-QLSuKien">
                <div class="table-responsive">
                    <table class="hinet-table table align-middle table-nowrap mb-0">
                        <thead>
                            <tr>
                                <th class="fixed-side">#</th>
                                <th class="fixed-side">Thao tác</th>
                                <th>Tên Sự Kiện</th>
                                <th>Ngày Sự Kiện</th>
                                <th>Địa Điểm</th>
                                <th>Mô Tả</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    var lstData = eval(@lstData);
    var moduleTableSelector = "#tbl-QLSuKien";
    function pagefunction() {
        var conf = [
            {
                tdClass: "center width50 fixed-side",
                isSort: false,
                nameModel: "",
                isCounter: true,
                content: function (data) {
                    return "<input type='checkbox'/>";
                }
            },
            {
                isSort: false,
                nameModel: "",
                tdClass: "center fixed-side",
                content: function (data) {
                    var result = `<div class="dropdown btn-group">
                        <button data-bs-toggle="dropdown" class="btn btn-success btn-sm dropdown-toggle fix_btn-active fix_btnAction" aria-expanded="false">Thao tác
                        </button>
                        <ul class="dropdown-menu fix_hover-li">`;
                    result += "<li><a href='javascript:void(0)' onclick='EditAction(\"/QLSuKienArea/QLSuKien/Edit/" + data.Id + "\")'   title = 'Chỉnh sửa'><i class='glyphicon glyphicon-edit'> </i> Sửa thông tin</a> </li>";
                    result += "<li><a href='javascript:void(0)' onclick='DeleteAction(\"/QLSuKienArea/QLSuKien/Delete/" + data.Id + "\")'  title = 'Xóa'><i class=' glyphicon glyphicon-remove' style='color:red'> </i> Xóa</a></li>";
                    result += "</ul></div>";
                    return result;
                }
            },
            {
                isSort: true,
                nameModel: 'TenSuKien',
                content: function (data) {
                    return data.TenSuKien;
                }
            },
            {
                isSort: true,
                nameModel: 'NgaySuKien',
                content: function (data) {
                    return ToDate(data.NgaySuKien);
                }
            },
            {
                isSort: true,
                nameModel: 'DiaDiem',
                content: function (data) {
                    return data.DiaDiem;
                }
            },
            {
                isSort: true,
                nameModel: 'MoTa',
                content: function (data) {
                    return data.MoTa;
                }
            }
        ];

        var getdatafunc = function (page, sortQuery, pageSize) {
            $.ajax({
                url: '/QLSuKienArea/QLSuKien/getData',
                type: 'post',
                cache: false,
                data: { "indexPage": page, "sortQuery": sortQuery, "pageSize": pageSize },
                success: function (data) {
                    $(moduleTableSelector).hinetTable("data", {
                        pageSize: pageSize != -1 ? pageSize : data.Count,
                        pageIndex: page,
                        pagecount: data.TotalPage,
                        recordCount: data.Count,
                        listItem: data.ListItem
                    });
                },
                error: function (xhr) {
                    CommonJS.alert(xhr.responseText);
                }
            });
        };

        var tblData = $("#tbl-QLSuKien").hinetTable("init", {
            pageSizeList: { size: [20, 50, 100, -1], label: ['20', '50', '100', 'Tất cả'] },
            pagecount: @Model.TotalPage,
            recordCount: @Model.Count,
            getData: getdatafunc,
            listItem: lstData,
            config: conf,
            showCheckBox: false
        });
    }

    function AfterSussessActionAjaxform() {
        $(moduleTableSelector).hinetTable("reload");
    }
    function AjaxSearchSuccess(rs) {
        $(moduleTableSelector).hinetTable("data", {
            pageIndex: 1,
            pagecount: rs.TotalPage,
            recordCount: rs.Count,
            listItem: rs.ListItem,
        });
    }
    function DeleteAction(id) {
        if (confirm("Bạn có chắc chắn muốn xóa sự kiện này?")) {
            $.ajax({
                url: '/QLSuKienArea/QLSuKien/Delete',
                type: 'POST',
                data: { id: id },
                success: function (result) {
                    if (result.Status) {
                        alert(result.Message); // hoặc show toast
                        AfterSussessActionAjaxform();
                    } else {
                        alert(result.Message);
                    }
                },
                error: function () {
                    alert("Có lỗi xảy ra khi xóa!");
                }
            });
        }
    }
    pagefunction();
</script>